# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_deck.ipynb.

# %% auto 0
__all__ = ['Deck', 'draw_n']

# %% ../nbs/01_deck.ipynb 3
from .card import *
from fastcore.utils import * 
import random

# %% ../nbs/01_deck.ipynb 5
class Deck:
    "A deck of 52 cards not including jokers"
    def __init__(self): self.cards = [Card(s, r) for s in range(4) for r in range(1, 14)]
    def __str__(self): return '; '.join(map(str, self.cards))
    __repr__ = __str__
    def __len__(self): return len(self.cards)
    def __contains__(self, card: Card): return card in self.cards
    
    def shuffle(self):
        "Shuffles the deck of cards"
        random.shuffle(self.cards)

# %% ../nbs/01_deck.ipynb 12
@patch
def pop(self:Deck, 
        idx:int=-1): # index of card to remove, defaults to last one
    "Remove one card"
    return self.cards.pop(idx)

# %% ../nbs/01_deck.ipynb 14
@patch
def remove(self: Deck, card: Card):
    self.cards.remove(card)

# %% ../nbs/01_deck.ipynb 16
def draw_n(n: int, replace:bool=True):
    d = Deck()
    d.shuffle()
    if replace:
        return [random.choice(d.cards) for _ in range(n)]
    else:
        return d.cards[:n]
